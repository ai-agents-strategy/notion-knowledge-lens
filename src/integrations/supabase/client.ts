// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = import.meta.env.VITE_SUPABASE_URL;
const SUPABASE_ANON_KEY = import.meta.env.VITE_SUPABASE_ANON_KEY;

if (!SUPABASE_URL) {
  console.error('‚ùå Missing VITE_SUPABASE_URL environment variable');
  throw new Error('Missing VITE_SUPABASE_URL environment variable. Please check your .env file.');
}

if (!SUPABASE_ANON_KEY) {
  console.error('‚ùå Missing VITE_SUPABASE_ANON_KEY environment variable');
  throw new Error('Missing VITE_SUPABASE_ANON_KEY environment variable. Please check your .env file.');
}

console.log('üîß Supabase Client Configuration:', {
  url: SUPABASE_URL ? `${SUPABASE_URL.substring(0, 30)}...` : 'MISSING',
  anonKey: SUPABASE_ANON_KEY ? `${SUPABASE_ANON_KEY.substring(0, 20)}...` : 'MISSING',
  hasUrl: !!SUPABASE_URL,
  hasAnonKey: !!SUPABASE_ANON_KEY
});

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

export const supabase = createClient<Database>(SUPABASE_URL, SUPABASE_ANON_KEY, {
  auth: {
    autoRefreshToken: true,
    persistSession: true,
    detectSessionInUrl: true,
    flowType: 'pkce'
  },
  db: {
    schema: 'public'
  },
  global: {
    headers: {
      'X-Client-Info': 'supabase-js-web'
    }
  }
});

// Test connection on initialization with better error handling
supabase.auth.getSession().then(({ data: { session }, error }) => {
  if (error) {
    console.error('‚ùå Supabase auth session error:', error);
  } else {
    console.log('‚úÖ Supabase client initialized successfully', {
      hasSession: !!session,
      userId: session?.user?.id || 'none'
    });
    
    // Test a simple database query to verify full connectivity
    supabase
      .from('integrations')
      .select('count')
      .limit(1)
      .then(({ error: queryError }) => {
        if (queryError) {
          console.error('‚ùå Supabase database test query failed:', queryError);
        } else {
          console.log('‚úÖ Supabase database connection verified');
        }
      })
      .catch(err => {
        console.error('‚ùå Supabase database test query error:', err);
      });
  }
}).catch(err => {
  console.error('‚ùå Supabase initialization error:', err);
});